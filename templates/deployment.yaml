apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "prometheus.labels" . | nindent 4 }}
  name: {{ include "prometheus.fullname" . }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      {{- include "prometheus.selectorLabels" . | nindent 6 }}
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    type: Recreate
    rollingUpdate: null
  template:
    metadata:
      labels:
        {{- include "prometheus.labels" . | nindent 8 }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      nodeName: {{ .Values.nodeName }}
      enableServiceLinks: true
      serviceAccountName: {{ include "prometheus.serviceAccountName" . }}
      containers:
        - name: prometheus-server-configmap-reload
          image: "{{ .Values.reloaderImage.repository }}:{{ .Values.reloaderImage.tag | default .Chart.AppVersion }}"
          imagePullPolicy: "{{ .Values.reloaderImage.pullPolicy }}"
          args:
            - --watched-dir=/etc/config
            - --reload-url=http://127.0.0.1:9090/-/reload
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true

        - name: prometheus-server
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          args:
            - "--storage.tsdb.retention.time=5d"
            - "--storage.tsdb.retention.size=30GB"
            - --config.file=/etc/config/prometheus.yml
            - --storage.tsdb.path=/data
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
          ports:
            - containerPort: {{ .Values.service.port }}
          readinessProbe:
            httpGet:
              path: /-/ready
              port: {{ .Values.service.port }}
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 4
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: {{ .Values.service.port }}
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: /data
              subPath: ""
      dnsPolicy: ClusterFirst
      terminationGracePeriodSeconds: 300
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "prometheus.fullname" . }}
        - name: storage-volume
          {{- if .Values.persistence.enabled }}
          {{- if .Values.persistence.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
          {{- else }}
          persistentVolumeClaim:
            claimName: {{ include "prometheus.fullname" . }}
          {{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}